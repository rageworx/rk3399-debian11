#!/bin/bash
### BEGIN INIT INFO
# Provides:          rkudev
# Required-Start:
# Required-Stop:
# Default-Start: S
# Default-Stop: 6
# Short-Description:
# Description:       rkudev service controller.
### END INIT INFO

RKUDEV_EN=off

# default VID is rockchip
VID=0x2207
PID=0x0009

# rkudev configs.
DEFAULT_USN="0000000000000000"
USN=$(grep Serial /proc/cpuinfo | cut -d':' -f2)
VNAME="Rockchip"
PNAME="RKUDEV"
BUSMA=500
RKUDEVBASE=/sys/kernel/config/usb_gadget/rockchip
RKUDEVFPATH=$RKUDEVBASE/functions/rkudev.gs0
RKUDEVSYM=$RKUDEVBASE/configs/b.1/f-rkudev.gs0

if [ ! -e $RKUDEVFPATH ];then
	RKUDEVPATH=$RKUDEVBASE/functions/rkudev.1
	RKUDEVSYM=$RKUDEVBASE/configs/b.1/rkudev.1
fi

make_config_string()
{
	tmp=$CONFIG_STRING
	if [ -n "$CONFIG_STRING" ]; then
		CONFIG_STRING=${tmp}_${1}
	else
		CONFIG_STRING=$1
	fi
}

force_write()
{
    for ((cnt=0; cnt<3; cnt++)); do
        TEST_V=`cat $1`
        if [[ "$TEST_V" != "$2" ]]; then
            chmod 666 $1
            echo $2 > $1
            chmod 644 $1
            sleep 0.25
        else
            break
        fi
    done

	TEST_V=`cat $1`
	if [[ "$TEST_V" != "$2" ]]; then
		echo "Failed to set $1 to $2"
	fi
}

parameter_init()
{
	while read line
	do
		case "$line" in
            usb_rkudev_en)
                RKUDEV_EN=on
                make_config_string rkudev
                ;;
		esac
	done < $DIR/.usb_config

	case "$CONFIG_STRING" in
        rkudev)
            PID=0x001a
            ;;
        *)
			PID=0x0019
	esac
}

apply_vidpid()
{   
    while true; do
        TEST_PID=`cat $RKUDEVBASE/idProduct`
        if [[ "$TEST_PID" != "$PID" ]]; then
			echo "Writing PID $PID to $RKUDEVBASE/idProduct"
			force_write $RKUDEVBASE/idProduct $PID
            sleep 0.25
        else
            break
        fi
    done

    while true; do
        TEST_VID=`cat $RKUDEVBASE/idVendor`
        if [[ "$TEST_VID" != "$VID" ]]; then
			echo "Writing VID $VID to $RKUDEVBASE/idVendro"
            force_write $RKUDEVBASE/idVendor $VID
            sleep 0.25
        else
            break
        fi
    done
}

configfs_init()
{
    if [ ! -e /sys/kernel/config ];then
        mount -t configfs none /sys/kernel/config
    fi
    if [ ! -e  $RKUDEVBASE ];then
        mkdir -p $RKUDEVBASE  -m 0770
    fi
    apply_vidpid
    if [ ! -e $RKUDEVBASE/strings/0x409 ];then
        mkdir -p $RKUDEVBASE/strings/0x409 -m 0770
    fi
    
    #echo $USN > $RKUDEVBASE/strings/0x409/serialnumber
    force_write $RKUDEVBASE/strings/0x409/serialnumber $USN

    #echo "$VNAME" > $RKUDEVBASE/strings/0x409/manufacturer
    force_write $RKUDEVBASE/strings/0x409/manufacturer $VNAME

    #echo "$PNAME" > $RKUDEVBASE/strings/0x409/product
    force_write $RKUDEVBASE/strings/0x409/product $PNAME

    if [ ! -e $RKUDEVBASE/configs/b.1 ];then
        mkdir -p $RKUDEVBASE/configs/b.1 -m 0770
    fi
    if [ ! -e $RKUDEVBASE/configs/b.1/strings/0x409 ];then
        mkdir -p $RKUDEVBASE/configs/b.1/strings/0x409  -m 0770
    fi
    echo $BUSMA > $RKUDEVBASE/configs/b.1/MaxPower

    if [ -e $RKUDEVBASE/configs/b.1/strings/0x409/configuration ];then
    	echo \"$CONFIG_STRING\" > $RKUDEVBASE/configs/b.1/strings/0x409/configuration
	fi
}

function_init()
{
	mkdir -p $RKUDEVFPATH
	if [ -e $RKUDEVFPATH ]; then
		if [ ! -e $RKUDEVSYM ]; then
			ln -s $RKUDEVFPATH $RKUDEVSYM
		fi
	else
		echo "Warning : $RKUDEVFPATH not createn."
	fi
}

case "$1" in
start|restart|reload)
	DIR=$(cd `dirname $0`; pwd)
	if [ ! -e "$DIR/.usb_config" ]; then
		echo "$0: Cannot find .usb_config"
		exit 0
	fi

	parameter_init
	if [ -z $CONFIG_STRING ]; then
		echo "$0: no function be selected"
		exit 0
	fi
	configfs_init
	function_init

	if [ $RKUDEV_EN = on ];then
        sleep 1 && echo "rkudev configured."
    fi

	UDC=`ls /sys/class/udc/| awk '{print $1}'`
	#echo $UDC > $RKUDEVBASE/UDC
	force_write $RKUDEVBASE/UDC $UDC
	;;
stop)
	echo "none" > $RKUDEVBASE/UDC
	;;
*)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit 0
